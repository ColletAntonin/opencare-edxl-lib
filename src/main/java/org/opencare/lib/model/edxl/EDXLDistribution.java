//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2551.01.07 at 12:40:10 ��͹���§ ICT 
//

package org.opencare.lib.model.edxl;

import java.util.Date;
import java.util.List;

import org.apache.abdera.model.Element;
import org.apache.abdera.model.ExtensibleElement;

/**
 * Java content class for anonymous complex type.
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this java content object. (defined at
 * file:/c:/Documents%20and%20Settings/nontster/Desktop/EDXL-DE_Schema_v1.0.xsd
 * line 5)
 * <p>
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base=&quot;{http://www.w3.org/2001/XMLSchema}anyType&quot;&gt;
 *       &lt;sequence&gt;
 *         &lt;element name=&quot;distributionID&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}string&quot;/&gt;
 *         &lt;element name=&quot;senderID&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}string&quot;/&gt;
 *         &lt;element name=&quot;dateTimeSent&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}dateTime&quot;/&gt;
 *         &lt;element name=&quot;distributionStatus&quot; type=&quot;{urn:oasis:names:tc:emergency:EDXL:DE:1.0}statusValues&quot;/&gt;
 *         &lt;element name=&quot;distributionType&quot; type=&quot;{urn:oasis:names:tc:emergency:EDXL:DE:1.0}typeValues&quot;/&gt;
 *         &lt;element name=&quot;combinedConfidentiality&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}string&quot;/&gt;
 *         &lt;element name=&quot;language&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}string&quot; minOccurs=&quot;0&quot;/&gt;
 *         &lt;element name=&quot;senderRole&quot; type=&quot;{urn:oasis:names:tc:emergency:EDXL:DE:1.0}valueListType&quot; maxOccurs=&quot;unbounded&quot; minOccurs=&quot;0&quot;/&gt;
 *         &lt;element name=&quot;recipientRole&quot; type=&quot;{urn:oasis:names:tc:emergency:EDXL:DE:1.0}valueListType&quot; maxOccurs=&quot;unbounded&quot; minOccurs=&quot;0&quot;/&gt;
 *         &lt;element name=&quot;keyword&quot; type=&quot;{urn:oasis:names:tc:emergency:EDXL:DE:1.0}valueListType&quot; maxOccurs=&quot;unbounded&quot; minOccurs=&quot;0&quot;/&gt;
 *         &lt;element name=&quot;distributionReference&quot; type=&quot;{http://www.w3.org/2001/XMLSchema}string&quot; maxOccurs=&quot;unbounded&quot; minOccurs=&quot;0&quot;/&gt;
 *         &lt;element name=&quot;explicitAddress&quot; type=&quot;{urn:oasis:names:tc:emergency:EDXL:DE:1.0}valueSchemeType&quot; maxOccurs=&quot;unbounded&quot; minOccurs=&quot;0&quot;/&gt;
 *         &lt;element name=&quot;targetArea&quot; type=&quot;{urn:oasis:names:tc:emergency:EDXL:DE:1.0}targetAreaType&quot; maxOccurs=&quot;unbounded&quot; minOccurs=&quot;0&quot;/&gt;
 *         &lt;element name=&quot;contentObject&quot; type=&quot;{urn:oasis:names:tc:emergency:EDXL:DE:1.0}contentObjectType&quot; maxOccurs=&quot;unbounded&quot; minOccurs=&quot;0&quot;/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 */
public interface EDXLDistribution extends ExtensibleElement, Element {

	public enum DistributionStatus {
		/** "Real-world" information for action * */
		Actual,
		/** Simulated information for exercise participants * */
		Exercise,
		/** Messages regarding or supporting network functions * */
		System,
		/** Discardable messages for technical testing only * */
		Test
	}

	public enum DistributionType {
		/** New information regarding an incident or activity * */
		Report,
		/** Updated information superseding a previous message * */
		Update,
		/** A cancellation or revocation of a previous message * */
		Cancel,
		/** A request for resources, information or action * */
		Request,
		/** A response to a previous request * */
		Response,

		/** A commitment of resources or assistance * */
		Dispatch,
		/** Acknowledgment of receipt of an earlier message * */
		Ack,
		/** Rejection of an earlier message (for technical reasons) * */
		Error,
		/**
		 * These messages are for reporting configuration during power up or
		 * after Installation or Maintenance. *
		 */
		SensorConfiguration,
		/**
		 * These are messages used to control sensors/sensor concentrator
		 * components behavior. *
		 */
		SensorControl,
		/**
		 * These are concise messages which report sensors/sensor concentrator
		 * component status or state of health. *
		 */
		SensorStatus,
		/**
		 * These are high priority messages which report sensor detections. *
		 */
		SensorDetection
	}

	
	/**
	 * Gets the value of the distributionID property.
	 * 
	 * @return possible object is {@link String}
	 */
	String getDistributionID();

	/**
	 * Sets the value of the distributionID property.
	 * 
	 * @param value
	 *            allowed object is {@link String}
	 */
	void setDistributionID(String value);
	
	/**
	 * Gets the value of the senderID property.
	 * 
	 * @return possible object is {@link String}
	 */
	String getSenderID();

	/**
	 * Sets the value of the senderID property.
	 * 
	 * @param value
	 *            allowed object is {@link String}
	 */
	void setSenderID(String value);
	
	/**
	 * Gets the value of the dateTimeSent property.
	 * 
	 * @return possible object is {@link java.util.Date}
	 */
	Date getDateTimeSent();

	/**
	 * Sets the value of the dateTimeSent property.
	 * 
	 * @param value
	 *            allowed object is {@link java.util.Date}
	 */
	void setDateTimeSent(Date value);

	/**
	 * Gets the value of the distributionStatus property.
	 * 
	 * @return possible object is {@link DistributionStatus}
	 */
	DistributionStatus getDistributionStatus();

	/**
	 * Sets the value of the distributionStatus property.
	 * 
	 * @param value
	 *            allowed object is {@link DistributionStatus}
	 */
	void setDistributionStatus(DistributionStatus status);	
	
	/**
	 * Gets the value of the distributionType property.
	 * 
	 * @return possible object is {@link java.lang.String}
	 */
	DistributionType getDistributionType();

	/**
	 * Sets the value of the distributionType property.
	 * 
	 * @param value
	 *            allowed object is {@link java.lang.String}
	 */
	void setDistributionType(DistributionType type);
	
	/**
	 * Gets the value of the combinedConfidentiality property.
	 * 
	 * @return possible object is {@link java.lang.String}
	 */
	String getCombinedConfidentiality();

	/**
	 * Sets the value of the combinedConfidentiality property.
	 * 
	 * @param value
	 *            allowed object is {@link java.lang.String}
	 */
	void setCombinedConfidentiality(String value);

	/**
	 * Gets the value of the language property.
	 * 
	 * @return possible object is {@link String}
	 */
	String getLanguage();

	/**
	 * Sets the value of the language property.
	 * 
	 * @param value
	 *            allowed object is {@link java.lang.String}
	 */
	<T extends Element>T setLanguage(String value);	
	
	List<ValueList> getSenderRoles();
	String getSenderRole(String name);
	void addSenderRole(String name, String value);
	void addSenderRole(ValueList role);
		
	List<ValueList> getRecipientRoles();	
	String getRecipientRole(String name);
	void addRecipientRole(String name, String value);
	void addRecipientRole(ValueList role);
		
	List<ValueList> getKeywords();	
	String getKeyword(String name);
	void addKeyword(String name, String value);
	void addKeyword(ValueList keyword);
		
	String[] getDistributionReference();	
	void addDistributionReference(String reference);
	void addDistributionReferences(String... references);
	
	List<ValueScheme> getExplicitAddresses();
	String[] getExplicitAddress(String name);
	void addExplicitAddress(String name, String value);
	void addExplicitAddress(String name, String... values);
	void addExplicitAddresses(ValueScheme value);

	List<TargetArea> getTargetAreas();	
	TargetArea addTargetArea();

	List<ContentObject> getContentObject();
	ContentObject addContentObject();
	
}
